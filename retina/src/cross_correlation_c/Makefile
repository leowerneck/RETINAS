# Library generated by this Makefile
LIBNAME = libretina_c.so

# Library directory path
LIB_DIR = ../../lib

# Specify the C compiler
CC = gcc

# Specify compilation flags.
CFLAGS  = -O2 -march=native -funroll-loops -Wall -std=gnu99 -shared -fPIC -fopenmp

# Specify the library flags
LDFLAGS = -lm -lfftw3 -lcblas

# Adjust flags if compiling on MacOS
ifeq ($(shell uname -s),Darwin)
  ifeq ($(BLAS_PATH),)
    CFLAGS  += -I/usr/local/opt/openblas/include
    LDFLAGS += -L/usr/local/opt/openblas/lib
  else
    CFLAGS  += -I$(BLAS_PATH)/include
    LDFLAGS += -L$(BLAS_PATH)/lib
  endif
  ifeq ($(FFTW_PATH),)
    CFLAGS  += -I/usr/local/opt/fftw/include
    LDFLAGS += -L/usr/local/opt/fftw/lib
  else
    CFLAGS  += -I$(FFTW_PATH)/include
    LDFLAGS += -L$(FFTW_PATH)/lib
  endif
endif

# Source code files in the project
SRC := $(wildcard *.c)

# Header files in the project
INC := $(wildcard *.h)

# Target library name
LIB     = $(LIB_DIR)/$(LIBNAME)

SRC_DIR := $(notdir $(shell pwd))
OBJ_DIR := $(addprefix ../../build/, $(SRC_DIR))

# Get every file defined in SRC and replace '.c' by '.o'
OBJ := $(addprefix $(OBJ_DIR)/, $(SRC:.c=.o))

all: $(LIB_DIR) $(OBJ_DIR) $(LIB)

$(LIB_DIR):
	@echo "Creating directory lib/"
	@mkdir -p $@

$(OBJ_DIR):
	@echo "Creating directory build/$(SRC_DIR)"
	@mkdir -p $@

$(LIB): $(OBJ)
	@echo "Creating library file lib/$(LIBNAME)"
	@$(CC) $(CFLAGS) $(OBJ) -o $(LIB) $(LDFLAGS)

$(OBJ): $(OBJ_DIR)/%.o : %.c $(INC)
	@echo "Compiling file $(SRC_DIR)/$<"
	@$(CC) $(CFLAGS) -c $< -o $@

clean:
	@echo "Removing object and library files for $(SRC_DIR)"
	@rm -f $(OBJ) $(LIB)
